const telegraf = require('telegraf')
const data = require('./data')
const Stage = require('telegraf/stage')
const session = require('telegraf/session')
const Scene = require('telegraf/scenes/base')
const { leave } = Stage
const stage = new Stage()
const bot = new telegraf(data.token)

const getName = new Scene('getName')
stage.register(getName)
const getYear = new Scene('getYear')
stage.register(getYear)
const getEduc = new Scene('getEduc')
stage.register(getEduc)
const getTheme = new Scene('getTheme')
stage.register(getTheme)
const getLangs = new Scene('getLangs')
stage.register(getLangs)
const getCompSkills = new Scene('getCompSkills')
stage.register(getCompSkills)
const getNumber = new Scene('getNumber')
stage.register(getNumber)
const main = new Scene('main')
stage.register(main)

bot.use(session())
bot.use(stage.middleware())


bot.hears('Ô∏è‚¨ÖÔ∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é', (ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  ctx.scene.enter('getName')
})

bot.start((ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  ctx.scene.enter('getName')
})


getName.on('text', async (ctx) => {
  if (ctx.message.text === '‚óÄÔ∏è –ù–∞–∑–∞–¥') {
    return ctx.reply('–í—ã —É–∂–µ –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ. –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–µ –∏–º—è')
  }

  ctx.session.name = ctx.message.text
  ctx.reply(
    '–í–≤–µ–¥–∏–¥—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getName')
  ctx.scene.enter('getYear')
})

getYear.hears(/^[0-9]{4}$/, async (ctx) => {
  ctx.session.year = ctx.message.text
  ctx.reply('–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. –í –∫–∞–∫–æ–º –≤—É–∑–µ –í—ã —É—á–∏–ª–∏—Å—å –∏ –Ω–∞ –∫–∞–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ?',
  { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
  )
  await ctx.scene.leave('getYear')
  ctx.scene.enter('getEduc')
})

getYear.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getYear')
  ctx.scene.enter('getName')
})

getYear.on('text', async (ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1990',
  { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
  )
})


getEduc.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–í–≤–µ–¥–∏–¥—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getEduc')
  ctx.scene.enter('getYear')
})

getEduc.hears('‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getEduc')
  ctx.scene.enter('getName')
})

getEduc.on('text', async (ctx) => {
  ctx.session.educ = ctx.message.text
  ctx.reply(
    '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –í–∞—à–µ–π –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
  )
  await ctx.scene.leave('getEduc')
  ctx.scene.enter('getTheme')
})


getTheme.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. –í –∫–∞–∫–æ–º –≤—É–∑–µ –í—ã —É—á–∏–ª–∏—Å—å –∏ –Ω–∞ –∫–∞–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ?',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getTheme')
  ctx.scene.enter('getEduc')
})

getTheme.hears('‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getTheme')
  ctx.scene.enter('getName')
})

getTheme.on('text', async (ctx) => {
  ctx.session.theme = ctx.message.text
  ctx.reply(
    '–ö–∞–∫–∏–º–∏ –í—ã —è–∑—ã–∫–∞–º–∏ –∏ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ? \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: \nEnglish - Intermediate\n–†—É—Å—Å–∫–∏–π - —Ä–æ–¥–Ω–æ–π',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
  )
  await ctx.scene.leave('getTheme')
  ctx.scene.enter('getLangs')
})


getLangs.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –í–∞—à–µ–π –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getLangs')
  ctx.scene.enter('getTheme')
})

getLangs.hears('‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getLangs')
  ctx.scene.enter('getName')
})

getLangs.on('text', async (ctx) => {
  ctx.session.langs = ctx.message.text
  ctx.reply('–ö–∞–∫–∏–º–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ –∏ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –í—ã –≤–ª–∞–¥–µ–µ—Ç–µ?' +
  '\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: \nMS Office - –≤ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–µ,\nAutoCad - —Å—Ä–µ–¥–Ω–∏–π',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getLangs')
  ctx.scene.enter('getCompSkills')
})


getCompSkills.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–ö–∞–∫–∏–º–∏ –í—ã —è–∑—ã–∫–∞–º–∏ –∏ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ? \n\n–ù–∞–ø—Ä–∏–º–µ—Ä: \nEnglish - Intermediate\n–†—É—Å—Å–∫–∏–π - —Ä–æ–¥–Ω–æ–π',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getCompSkills')
  ctx.scene.enter('getLangs')
})

getCompSkills.hears('‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getCompSkills')
  ctx.scene.enter('getName')
})

getCompSkills.on('text', async (ctx) => {
  ctx.session.compSkills = ctx.message.text
  ctx.reply(
    '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç" –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º.',
    { reply_markup: { keyboard: [[{text: 'üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact: true}], ['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getCompSkills')
  ctx.scene.enter('getNumber')
})


getNumber.hears('‚óÄÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
  ctx.reply(
    '–ö–∞–∫–∏–º–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ –∏ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –í—ã –≤–ª–∞–¥–µ–µ—Ç–µ?' +
  '\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: \nMS Office - –≤ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–µ,\nAutoCad - —Å—Ä–µ–¥–Ω–∏–π',
    { reply_markup: { keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥', '‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('getCompSkills')
})

getNumber.hears('‚ùå –°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ', async (ctx) => {
  ctx.reply('–ù–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –æ—Ç—á–µ—Å—Ç–≤–æ')
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('getCompSkills')
})

getNumber.on('contact', async (ctx) => {
  ctx.reply(
    '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º.',
    { reply_markup: { keyboard: [['Ô∏è‚¨ÖÔ∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é']], resize_keyboard: true, one_time_keyboard: true } }
    )
  await ctx.scene.leave('getNumber')
  ctx.scene.enter('main')

  for (let key of data.admins) {
    bot.telegram.sendMessage(
      key,
      `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! \n\n–§.–ò.–û: [${ctx.session.name}](tg://user?id=${ctx.from.id}), \n–ì–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è: ${ctx.session.year}, \n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: ${ctx.session.educ},` + 
      `\n–¢–µ–º–∞ –¥–∏–ø–ª–æ–º–∞: ${ctx.session.theme}, \n–Ø–∑—ã–∫–∏: ${ctx.session.langs}, \n–í–ª–∞–¥–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º: ${ctx.session.compSkills},` +
      `\n–ù–æ–º–µ—Ä: ${ctx.message.contact.phone_number}`,
      { parse_mode: 'markdown' }
    )
  }
  ctx.session = null
})

bot.startPolling()